"""
Django settings for healthstack project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""


from pathlib import Path
import os
import environ
# django-environ
import ssl, certifi
# Disable SSL certificate verification for email sending
ssl._create_default_https_context = ssl._create_unverified_context

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

### setting up env
env = environ.Env()

environ.Env.read_env(os.path.join(BASE_DIR, '.env'))




# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG', default=False)

# ALLOWED_HOSTS Configuration - Hardcoded to ensure Render.com works
ALLOWED_HOSTS = [
    'mahimamedicare.onrender.com',
    '*.onrender.com', 
    'localhost',
    '127.0.0.1',
    '0.0.0.0',
    '*'  # Allow all hosts for now - CHANGE THIS IN PRODUCTION for security
]

# Try to read from environment variable as well, but fallback to hardcoded values
try:
    env_allowed_hosts = os.environ.get('ALLOWED_HOSTS', '')
    if env_allowed_hosts:
        env_hosts_list = [host.strip() for host in env_allowed_hosts.split(',')]
        ALLOWED_HOSTS.extend(env_hosts_list)
except:
    pass

# Remove duplicates and empty strings
ALLOWED_HOSTS = list(filter(None, set(ALLOWED_HOSTS)))

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'hospital.apps.HospitalConfig',
    'hospital_admin.apps.HospitalAdminConfig',
    'doctor.apps.DoctorConfig',
    'pharmacy.apps.PharmacyConfig',
    'razorpay_payment.apps.RazorpayPaymentConfig',
    'widget_tweaks',
    'rest_framework',
    'ChatApp.apps.ChatappConfig',
    # 'debug_toolbar',  # Removed for production
 

]

MIDDLEWARE = [
    'healthstack.middleware.DatabaseInitializationMiddleware',  # Emergency DB init
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'debug_toolbar.middleware.DebugToolbarMiddleware',  # Removed for production
]

# Add WhiteNoise middleware only in production
if not DEBUG:
    MIDDLEWARE.insert(1, 'whitenoise.middleware.WhiteNoiseMiddleware')

# INTERNAL_IPS = [
#     "127.0.0.1",
# ]  # Debug toolbar removed

ROOT_URLCONF = 'healthstack.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'healthstack.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Production database configuration (PostgreSQL for Render.com)
if 'DATABASE_URL' in os.environ:
    try:
        import dj_database_url
        DATABASES['default'] = dj_database_url.parse(os.environ.get('DATABASE_URL'))
    except ImportError:
        # dj_database_url not installed, will use default SQLite
        pass


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

# Simplified password validation - allows username=password and simple passwords
# Minimum length is enforced in forms (6 characters)
# Email validation is still strict and required
AUTH_PASSWORD_VALIDATORS = []


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_URL = '/images/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'static/images')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

# WhiteNoise configuration for static files (production only)
if not DEBUG:
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

### SSLCOMMERZ env variables
#VARIABLE should be in capital letter.
STORE_ID = env('STORE_ID')
STORE_PASSWORD = env('STORE_PASSWORD')
STORE_NAME = env('STORE_NAME')

### Gmail SMTP Configuration
# For production, use custom backend with SSL bypass
EMAIL_BACKEND = 'healthstack.email_backend.UnverifiedEmailBackend'
# For testing/development, uncomment the line below to use console backend
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'marklegend029@gmail.com'
EMAIL_HOST_PASSWORD = 'lkkvkybyhftvppvc'
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_TIMEOUT = 30  # Increase timeout for slow connections
# Disable SSL certificate verification for email
EMAIL_SSL_CERTFILE = None
EMAIL_SSL_KEYFILE = None
# Fallback email configuration
DEFAULT_FROM_EMAIL = 'marklegend029@gmail.com'
SERVER_EMAIL = 'marklegend029@gmail.com'

# Admin notification settings - All important emails go to admin
ADMIN_EMAIL = 'marklegend029@gmail.com'  # Main admin email for notifications
ADMINS = [('Mahima Medicare Admin', 'marklegend029@gmail.com')]
MANAGERS = ADMINS

# Lab Test VAT Configuration
LAB_TEST_VAT_AMOUNT = 20.00  # Fixed VAT amount per test in INR




# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'hospital.User'


# SESSION AGE 45 Minutes
SESSION_COOKIE_AGE = 45*60
SESSION_SAVE_EVERY_REQUEST = True

# Razorpay Configuration
RAZORPAY_KEY_ID = 'rzp_test_RJJBE6HtR8Dzn7'
RAZORPAY_KEY_SECRET = '0wVMkcoFxJyWzAS7qT3k1CKW'

# SSL Configuration for Email - Simple and reliable SSL certificate bypass
import ssl

# Create unverified SSL context
unverified_context = ssl._create_unverified_context()

# Simple SSL patching - just override the default context creation
ssl._create_default_https_context = ssl._create_unverified_context

# Additional email SSL settings
EMAIL_SSL_CONTEXT = unverified_context

# Production Security Settings
if not DEBUG:
    # Security settings for production
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_SECONDS = 31536000
    SECURE_REDIRECT_EXEMPT = []
    SECURE_SSL_REDIRECT = True
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    USE_TZ = True
    
    # Session security
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    
    # Additional security headers
    X_FRAME_OPTIONS = 'DENY'
else:
    # Development settings - explicitly disable HTTPS redirects
    SECURE_SSL_REDIRECT = False
    SESSION_COOKIE_SECURE = False
    CSRF_COOKIE_SECURE = False
    SECURE_BROWSER_XSS_FILTER = False
    SECURE_CONTENT_TYPE_NOSNIFF = False
